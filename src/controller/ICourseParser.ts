/**
 * Created by alexgoddijn on 14/02/2017.
 */

import {Course, zipDat, Result} from "./IInsightFacade";

export interface ICourseParser {
    /**
     * Takes a promise list of course files (file.async) and returns a parsed list of courses
     *
     * @param subPromiseList The promise list generated by (file.async) on all course files
     * @param id The name of the dataset to be added
     *
     * Returns a promise that fulfills with a list of courses
     * Returns a promise that rejects if an error occurs
     */
    parse(subPromiseList: Promise<string>[], id: string): Promise<Course[]>;

    /**
     * Takes data from the zip file and returns an list of courses for each file
     *
     * @param courseDat The zip data to be parsed
     *
     * Returns a promise that fulfills with a list of courses
     * Returns a promise that rejects if an error occurse
     */
    genCourseList(courseDat: zipDat): Promise<Course[]>;

    /**
     * Generates a course object given course data from a zip file
     *
     * @param courseObj The zip data to be turned into a course object
     *
     * Returns a course object given course data
     */
    genCourse(courseObj: Result): Course;
}